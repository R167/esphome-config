substitutions:
  name: s31-plug
  friendly_name: S31 Plug
  # note: if you're going to scrape the data from this sensor, ensure this is a multiple of the scrape interval
  update_interval: 5s

esphome:
  name: ${name}
  friendly_name: ${friendly_name}

  project:
    name: Sonoff S31 Plug
    version: "0.1.0"

esp8266:
  board: esp01_1m

packages:
  core: !include ../common/core.yaml

# Enable logging
logger:
  baud_rate: 0 # disabel UART logging since it interferes with cse7766

# Enable Home Assistant API
api:
  reboot_timeout: 0s

# The prometheus componet exposes the data to be scraped by prometheus. To best support
# prometheus norms, ensure
# - the update_interval is a multiple of the scrape interval
# - when creating IDs, name them so they can be renamed with metric_relabel_configs
prometheus:

web_server:
  port: 80

# Device Specific Config
uart:
  rx_pin: RX
  baud_rate: 4800

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "button"
    id: button
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "Connection Status"
    id: connect_status
  - platform: template
    name: "Power status"
    id: plug
    disabled_by_default: true
    lambda: |-
      return id(relay).state;

sensor:
  - platform: wifi_signal
    name: "wifi_signal"
    update_interval: 60s
  - platform: cse7766
    current:
      id: pm_amperes
      name: Current
      accuracy_decimals: 1
      unit_of_measurement: A
      filters:
        - throttle_average: ${update_interval}
    voltage:
      id: pm_volts
      name: Voltage
      accuracy_decimals: 1
      unit_of_measurement: V
      filters:
        - throttle_average: ${update_interval}
    power:
      id: pm_watts
      name: Power
      accuracy_decimals: 1
      unit_of_measurement: W
      filters:
        - timeout: # force the sensor to display 0 when power resets
            timeout: ${update_interval}
            value: 0.0
        - throttle_average: ${update_interval}
    energy:
      name: Energy
      id: pm_joules_total
      unit_of_measurement: J
      accuracy_decimals: 1
      filters:
        - throttle: ${update_interval}
        - multiply: 0.0002777777778 # convert Wh to J
  - platform: integration
    name: Integrated Energy
    sensor: integrated_joules_total
    time_unit: s
    accuracy_decimals: 1
    unit_of_measurement: J

switch:
  - platform: gpio
    name: Relay
    pin: GPIO12
    id: relay
    restore_mode: ALWAYS_ON

status_led:
  pin:
    number: GPIO13
    inverted: true
